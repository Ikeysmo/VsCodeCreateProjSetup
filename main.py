#! usr/bin/python
import task_gen
import os
import json
import subprocess

if os.name == 'posix':
    BASE = os.path.expandvars('$HOME')
else:
    BASE = 'C:\\Projects' #windows


Base = os.path.join(BASE, 'VerilogProjects')


# Press the green button in the gutter to run the script.
if __name__ == '__main__':

    #subprocess.run(r"/usr/bin/flatpak", shell=False)

    print("Project will be created here: {}".format(Base))
    folder_name = input("What do you want to name the project? ").strip()

    full_folder_path = os.path.join(Base, folder_name)
    print("Full folder name: {}\n\n".format(full_folder_path))

    if not os.path.isdir(full_folder_path):
        #make the folder
        print("Made directory: {}\n".format(full_folder_path))
        os.makedirs(full_folder_path)

        #make a sub folder for vs code
        vscode_dir = os.path.join(full_folder_path, ".vscode")
        os.makedirs(vscode_dir)
        print("Made directory: {}\n".format(vscode_dir))

        with open(os.path.join(vscode_dir, "tasks.json"), "w") as fpo:
            json.dump(task_gen.createFullOnTaskJson(), fpo, indent=2)

        with open(os.path.join(vscode_dir, "settings.json"), "w") as fpo:
            json.dump(
                {"files.exclude" : {
                    "**/*.backup*": True,
                    "**/xelab.*" : True,
                    "**/xvlog.*" : True,
                    "**/vivado_pid*.str" : True,
                    "**/xsim.*" : True,
                    "**/*.pb" : True,
                    "**/*.wcfg" : True,
                    "**/*.wdb" : True,
                    "**/.Xil" : True,
                    }
            },
            fpo, indent=True)

        with open(os.path.join(full_folder_path, "testbench.sv"), "w") as fpo:
            fpo.write("\n//autogenerated... use [CTRL] + [SHIFT] + B  to run commands\n//testbench code goes here\n\nmodule top;\n\n    initial begin\n\n    end\n\nendmodule;\n")

        with open(os.path.join(full_folder_path, "design.sv"), "w") as fpo:
            fpo.write("\n//design code goes here\n\nmodule dut();\n\n\n\nendmodule;\n")

        with open(os.path.join(full_folder_path, "simulate_batch.tcl"), "w") as fpo:
            fpo.write("log_wave -r /\nrun all;\nadd_wave /\n")
    else:
        print("\nDetected directory already, just opening up vscode...\n")

    subprocess.run("code -n {}".format(full_folder_path), shell=True)


# See PyCharm help at https://www.jetbrains.com/help/pycharm/
